NATO_PHONETIC_ALPHABET = """
10462   A
2036    B
502573  C
12693   D
249205  E
923466  F
2345    G
3254    H
124093350   I
19293533    J
530 K
2   L
9   M
923647  N
60943   O
192 P
053 Q
402534  R
7694    S
94032454    T
2363017 U
40035    V
0   W
69  X
793 Y
6643223 Z
97    -
"""

def get_code_from_NPA(str_code):
    dict_code = {}
    list_data = str_code.strip().split('\n')
    for n in range(len(list_data)):
        b = list_data[n].strip().split()
        dict_code[b[0]] = b[1]
    return dict_code

dict_data = get_code_from_NPA(NATO_PHONETIC_ALPHABET)
print(dict_data)
input_word = (input("Encoded Message: "))

def get_input_word(input_word):
    encoded_input = input_word.strip().split("8")
    del encoded_input[len(encoded_input) - 1]
    print(str(encoded_input) + '\n')
    return encoded_input

def print_output(encoded_input):
    print("Decoded Message: ", end='')
    for n in range(len(encoded_input)):
        answer = dict_data[encoded_input[n]]
        print(answer, end="")
    print("\n")
# print(dict_data[input_word.upper()])

encoded_input = get_input_word(input_word)
print_output(encoded_input)

# 192810462840253485308
# def input_phrase():
#     pass
#     return phrase
#
# def check_phrase(phrase):
#     return checked_phrase
#
# def get_NPA_encode(word):
#     pass
#     return NPA_encode_word


